[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "networkx-mcp-server"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server for NetworkX graph operations"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "NetworkX MCP Server Contributors" },
]
keywords = ["mcp", "networkx", "graph", "network", "analysis"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=1.0.0",
    "fastmcp>=0.1.0",
    "networkx>=3.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "plotly>=5.0.0",
    "pyvis>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pre-commit>=3.4.0",
]

[project.scripts]
networkx-mcp = "networkx_mcp.server:main"

[project.urls]
"Homepage" = "https://github.com/yourusername/networkx-mcp-server"
"Bug Tracker" = "https://github.com/yourusername/networkx-mcp-server/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/networkx_mcp"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "networkx.*",
    "matplotlib.*",
    "plotly.*",
    "pyvis.*",
]
ignore_missing_imports = true