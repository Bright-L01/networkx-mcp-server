[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "networkx-mcp-server"
version = "2.0.0"
description = "Production-ready MCP server for NetworkX graph analysis with Tools, Resources, and Prompts"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Bright Liu", email = "brightliu@example.com"}]
maintainers = [{name = "Bright Liu", email = "brightliu@example.com"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "networkx>=3.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "redis>=4.0.0",
    "aiofiles>=0.8.0",
    "pyyaml>=6.0",
    "python-dotenv>=0.19.0",
    "pydantic>=2.0.0",
    "rich>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0",
    "types-aiofiles>=0.8.0",
    "types-redis>=4.0.0",
    "types-psutil>=5.8.0",
    "pandas-stubs>=1.5.0",
    "types-requests>=2.28.0",
    "types-PyMySQL>=1.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
ml = [
    "scikit-learn>=1.0.0",
    "torch>=2.0.0",
    "sentence-transformers>=2.0.0",
]
visualization = [
    "matplotlib>=3.3.0",
    "plotly>=5.0.0",
    "pyvis>=0.3.0",
    "seaborn>=0.12.0",
    "pygraphviz>=1.9",
]
enterprise = [
    "psutil>=5.8.0",
    "aiohttp>=3.8.0",
    "jinja2>=3.0.0",
    "reportlab>=3.6.0",
    "schedule>=1.1.0",
]
all = [
    "networkx-mcp-server[dev,ml,visualization,enterprise]",
]

[project.urls]
Homepage = "https://github.com/Bright-L01/networkx-mcp-server"
Documentation = "https://networkx-mcp-server.readthedocs.io"
Repository = "https://github.com/Bright-L01/networkx-mcp-server"
Issues = "https://github.com/Bright-L01/networkx-mcp-server/issues"

[project.scripts]
networkx-mcp-server = "networkx_mcp.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["networkx_mcp*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501", "B008", "C901", "W191", "I001"]

[tool.ruff.lint.isort]
lines-after-imports = 1

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "scripts", "docs", "build", "dist"]
skips = [
    "B101",  # assert_used - we use assert in tests
    "B311",  # random - we use random for non-crypto purposes
    "B404",  # subprocess - we need subprocess for some operations
    "B603",  # subprocess_without_shell_equals_true - false positives
    "B607",  # start_process_with_partial_path - false positives
    "B324",  # hashlib - we use MD5 for non-crypto purposes
    "B104",  # hardcoded_bind_all_interfaces - false positive
]
